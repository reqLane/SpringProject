{
	"info": {
		"_postman_id": "9c77b3b1-50d3-4bc8-b66d-1c08396647a9",
		"name": "SpringTestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24010524"
	},
	"item": [
		{
			"name": "AddTestStudent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Student name test\", function () {\r",
							"    let name = JSON.parse(pm.request.body.raw).name;\r",
							"    pm.expect(name[0]).to.not.equal(name.toLowerCase()[0]);\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"login\": \"vasya\",\r\n  \"password\": \"Pass12word34\",\r\n  \"name\": \"Vasiliy\",\r\n  \"surname\": \"Franko\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddTestOrganization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.request);\r",
							"\r",
							"pm.test(\"Name valid test\", function () {\r",
							"    pm.expect(JSON.parse(pm.request.body.raw).name).to.not.equal(undefined);\r",
							"    pm.expect(JSON.parse(pm.request.body.raw).name).to.not.equal(\"\");\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test Organization\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/organization/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"organization",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddTestProject",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.expect(JSON.parse(pm.request.body.raw).name.length).not.lessThan(3);\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test Project\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/project/addTo/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"project",
						"addTo",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTestStudent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/get/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"get",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTestOrganization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Organization name test\", function () {\r",
							"    let jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData.name).to.not.equal(undefined);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/organization/get/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"organization",
						"get",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteTestStudent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/delete/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"delete",
						"1"
					]
				}
			},
			"response": []
		}
	]
}